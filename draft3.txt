#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <windows.h>
#include <string.h>
#include <time.h>

char word[100];
char jawaban;
char ans[100];
char player[2][16];
int i, j;
int turn;
int round;
int life[2];
int score[2];
int complete;
int attempt;
int correct;
int correct_total;

void lower_string(char s[]) {
   int c = 0;
   
	while (s[c] != '\0') {
		if (s[c] >= 'A' && s[c] <= 'Z') {
			s[c] = s[c] + 32;
		}
	c++;
	}
}

void print_hangman(int life){
	system("cls");
	printf("\nRonde\t: %d \nGiliran\t: %s \nScore\t: %d \n\n", round, player[turn], score[turn]);
	switch(life){
		case 0:
			printf("       +----------+\n");
			printf("       |          |\n");
			printf("       |          |\n");
			printf("       |         (x)\n");
			printf("       |         /|\\\n");
			printf("       |        | | |\n");
			printf("       |         / \\\n");
			printf("       |        /   \\\n");
			printf("       |        '   '\n");
			printf("       |\n");
			printf("+------+------------------+\n");
			printf("|                         |\n");
			printf("|                         +----+\n");
			printf("|                              |\n");
			printf("+------------------------------+\n");
			break;
		case 1:
			printf("       +----------+\n");
			printf("       |          |\n");
			printf("       |          |\n");
			printf("       |         (.)\n");
			printf("       |         /|\\\n");
			printf("       |        | | |\n");
			printf("       |         / \\\n");
			printf("       |         |_|\n");
			printf("       |         / \\\n");
			printf("       |        /   \\\n");
			printf("+------+------------------+\n");
			printf("|                         |\n");
			printf("|                         +----+\n");
			printf("|                              |\n");
			printf("+------------------------------+\n");
			break;
		case 2:
			printf("       +----------+\n");
			printf("       |          |\n");
			printf("       |          |\n");
			printf("       |         ( )\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("+------+------------------+\n");
			printf("|                         |\n");
			printf("|                         +----+\n");
			printf("|                              |\n");
			printf("+------------------------------+\n");
			break;
		case 3:
			printf("       +----------+\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("+------+------------------+\n");
			printf("|                         |\n");
			printf("|                         +----+\n");
			printf("|                              |\n");
			printf("+------------------------------+\n");
			break;
		case 4:
			printf("       +\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("       |\n");
			printf("+------+------------------+\n");
			printf("|                         |\n");
			printf("|                         +----+\n");
			printf("|                              |\n");
			printf("+------------------------------+\n");
			break;
		case 5:
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("\n");
			printf("+------+------------------+\n");
			printf("|                         |\n");
			printf("|                         +----+\n");
			printf("|                              |\n");
			printf("+------------------------------+\n");
			break;
	}
}

void print_kata(){
	int same = 0;
	correct_total = 0;
	printf("\n\n");
	for (i = 0; i < strlen(word); i++){
		for(j = 0; j < strlen(ans); j++){
			if (word[i] == ans[j]){
				printf("%c ", word[i]);
				correct_total++;
				same = 1;
				break;
			}
		}
		if(same == 0){
			printf("_ ");
		}
		same = 0;
	}

	printf("\n\n");
}

void player_name(){
	printf("Masukkan nama player 1 : ");
	scanf("%s",player[0]);
	printf("Masukkan nama player 2 : ");
	scanf("%s",player[1]);
	system("cls");
}

void word_input(){
	system("cls");
	printf("\nRonde\t: %d \nGiliran\t: %s \nScore\t: %d \n\n", round, player[(turn+1)%2], score[turn]);
	printf("Masukkan sebuah kata : ");
	scanf("%s", word);
	lower_string(word);
	system("cls");
}

void init(){
	turn = 0;
	round = 1;
	life[0] = 5;
	life[1] = 5;
	score[0] = 0;
	score[1] = 0;
	complete = 0;
	attempt = 0;
	correct = 0;
	correct_total = 0;
}

void isi_huruf(){
	printf("Masukkan jawaban : ");
	scanf(" %c", &jawaban);
	ans[attempt] = jawaban;
	lower_string(ans);guess
}

void kalkulasi(){
	for (i = 0; i < strlen(word); i++){
		if (word[i] == ans[attempt]){
			correct = 1;
		}
	}
	if(correct == 0){
		life[turn]--;
	}else if(correct_total == strlen(word)){
		complete = 1;
	}
}

void game(){
	while((life[0]>0) && (life[1]>0)){
		word_input();
		life[0] = 5;
		life[1] = 5;
		while((complete == 0) && (life[0]>0) && (life[1]>0)){
			print_hangman(life[turn]);
			print_kata();
			isi_huruf();
			kalkulasi();
			attempt++;
			correct = 0;
			correct_total = 0;
		}
		score[turn]++;
		turn = (turn+1)%2;
		round++;
		complete = 0;
		attempt = 0;
		correct = 0;
		correct_total = 0;
		for(i=0; i<strlen(ans); i++){
			ans[i] = '\0';
		}
	}
}

int main()
{
	player_name();
	init();
	game();
	print_hangman(0);
	printf("Pemenangnya adalah : %s", player[turn]);
	
}
